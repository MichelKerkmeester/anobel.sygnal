{
  "version": 3,
  "sources": ["../../src/components/DropdownMenu.ts"],
  "sourcesContent": ["/**\n * DropdownMenu component for handling navigation dropdown menus.\n */\ndeclare var gsap: any;\n\nexport class DropdownMenu {\n  private dropdowns: HTMLElement[] = [];\n  private navigation: HTMLElement | null = null;\n  private dropdownData: any[] = [];\n\n  public init(): void {\n    this.dropdowns = Array.from(document.querySelectorAll(\".nav--dropdown\"));\n\n    if (!this.dropdowns.length) {\n      console.error(\"No dropdown elements found in the DOM!\");\n      return;\n    }\n\n    this.navigation = document.querySelector(\".nav--bar\");\n\n    if (!this.navigation) {\n      console.error(\"Navigation container (.nav--bar) not found!\");\n      return;\n    }\n\n    // Initialize dropdown data\n    this.dropdownData = this.dropdowns\n      .map((dropdown) => {\n        const dropdownToggle = dropdown.querySelector(\".btn--nav-dropdown\");\n        const dropdownMenu = dropdown.querySelector(\".nav--dropdown-menu\");\n        const dropdownIcon = dropdown.querySelector(\".icon--svg.is--nav\");\n\n        if (!dropdownToggle || !dropdownMenu || !dropdownIcon) {\n          console.warn(\n            \"Some required elements are missing in a .nav--dropdown!\"\n          );\n          return null;\n        }\n\n        return {\n          dropdown,\n          toggle: dropdownToggle as HTMLElement,\n          dropdownMenu: dropdownMenu as HTMLElement,\n          icon: dropdownIcon as HTMLElement,\n          isOpen: false,\n          animating: false,\n        };\n      })\n      .filter((d) => d !== null);\n\n    // Attach event listeners to each dropdown toggle\n    this.dropdownData.forEach((d: any) => {\n      if (!d) return;\n      d.toggle.addEventListener(\"click\", () => {\n        if (d.animating) return;\n        if (d.isOpen) {\n          this.closeDropdown(d);\n        } else {\n          this.closeAllDropdowns(d);\n          this.openDropdown(d);\n        }\n      });\n    });\n\n    // Event listener to close dropdowns when clicking outside\n    document.addEventListener(\"click\", this.handleDocumentClick.bind(this));\n\n    // Close dropdowns when pressing the Escape key\n    document.addEventListener(\"keydown\", (e) => {\n      if (e.key === \"Escape\") {\n        this.closeAllDropdowns();\n      }\n    });\n  }\n\n  private createOpenTimeline(d: any): gsap.core.Timeline {\n    const tl = gsap.timeline({\n      onStart: () => {\n        d.animating = true;\n      },\n      onComplete: () => {\n        d.animating = false;\n      },\n    });\n\n    // Check if we're on desktop (window width > 768px)\n    const isDesktop = window.matchMedia(\"(min-width: 768px)\").matches;\n\n    tl.fromTo(\n      d.dropdownMenu,\n      { opacity: 0, height: 0 },\n      { opacity: 1, height: \"auto\", duration: 0.3, ease: \"power2.out\" }\n    )\n      .to(d.icon, { rotation: 180, duration: 0.3, ease: \"power2.out\" }, \"<\")\n      .to(\n        d.toggle,\n        { backgroundColor: \"var(--secondary--darkest)\", duration: 0.3 },\n        \"<\"\n      );\n\n    // Only add border radius animation on desktop\n    if (isDesktop) {\n      tl.to(\n        this.navigation,\n        {\n          borderBottomLeftRadius: \"0\",\n          borderBottomRightRadius: \"0\",\n          duration: 0.3,\n          ease: \"power2.out\",\n        },\n        \"<\"\n      );\n    }\n\n    return tl;\n  }\n\n  private createCloseTimeline(d: any): gsap.core.Timeline {\n    const tl = gsap.timeline({\n      onStart: () => {\n        d.animating = true;\n      },\n      onComplete: () => {\n        d.animating = false;\n      },\n    });\n\n    // Check if we're on desktop (window width > 768px)\n    const isDesktop = window.matchMedia(\"(min-width: 768px)\").matches;\n\n    tl.fromTo(\n      d.dropdownMenu,\n      { opacity: 1, height: d.dropdownMenu.scrollHeight },\n      { opacity: 0, height: 0, duration: 0.3, ease: \"power2.in\" }\n    )\n      .to(d.icon, { rotation: 0, duration: 0.3, ease: \"power2.in\" }, \"<\")\n      .to(d.toggle, { backgroundColor: \"\", duration: 0.3 }, \"<\");\n\n    // Only add border radius animation on desktop\n    if (isDesktop) {\n      tl.to(\n        this.navigation,\n        {\n          borderBottomLeftRadius: \"1rem\",\n          borderBottomRightRadius: \"1rem\",\n          duration: 0.3,\n          ease: \"power2.in\",\n        },\n        \"<\"\n      );\n    }\n\n    return tl;\n  }\n\n  private closeAllDropdowns(except: any = null): void {\n    this.dropdownData.forEach((d: any) => {\n      if (d !== except && d.isOpen && !d.animating) {\n        this.closeDropdown(d);\n      }\n    });\n  }\n\n  private openDropdown(d: any): void {\n    this.createOpenTimeline(d).play();\n    d.isOpen = true;\n  }\n\n  private closeDropdown(d: any): void {\n    this.createCloseTimeline(d).play();\n    d.isOpen = false;\n  }\n\n  private handleDocumentClick(e: MouseEvent): void {\n    this.dropdownData.forEach((d: any) => {\n      if (d.isOpen && !d.animating) {\n        const clickedInside =\n          d.dropdown.contains(e.target) || d.toggle.contains(e.target);\n        if (!clickedInside) {\n          this.closeDropdown(d);\n        }\n      }\n    });\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
