{
  "version": 3,
  "sources": ["../../src/components/MegaMenu.ts"],
  "sourcesContent": ["/**\n * MegaMenu component for mobile mega menu functionality.\n */\ndeclare var gsap: any;\ndeclare var lottie: any;\n\nexport class MegaMenu {\n  private megaMenu: HTMLElement | null = null;\n  private menuButton: HTMLElement | null = null;\n  private lottieAnimation: any = null;\n  private isOpen: boolean = false;\n\n  public init(): void {\n    this.megaMenu = document.querySelector(\".nav--mega-menu\");\n    this.menuButton = document.querySelector(\".btn--hamburger\");\n\n    if (!this.megaMenu || !this.menuButton) {\n      console.error(\"Mega menu elements not found!\");\n      return;\n    }\n\n    // Load Lottie animation\n    this.lottieAnimation = lottie.loadAnimation({\n      container: document.querySelector(\".lottie--hamburger\"),\n      renderer: \"svg\",\n      loop: false,\n      autoplay: false,\n      path: \"https://cdn.prod.website-files.com/6723d26a4aa4a278cad8f59c/6777ecd6636dc4314d954783_Icon%20-%20Hamburger%20Menu.json\",\n    });\n\n    // Toggle menu on button click\n    this.menuButton.addEventListener(\"click\", this.toggleMenu.bind(this));\n  }\n\n  private toggleMenu(): void {\n    if (this.isOpen) {\n      this.closeMenu();\n    } else {\n      this.openMenu();\n    }\n    this.isOpen = !this.isOpen;\n  }\n\n  private openMenu(): void {\n    if (!this.megaMenu) return;\n    this.megaMenu.style.display = \"flex\"; // Set display to flex before animation\n    gsap.to(this.megaMenu, {\n      duration: 0.8,\n      height: \"100svh\",\n      width: \"100%\",\n      ease: \"power2.out\",\n      delay: 0.2,\n      onComplete: () => {\n        this.megaMenu!.style.borderRadius = \"0rem\";\n      },\n    });\n    this.lottieAnimation.playSegments([0, 70], true);\n  }\n\n  private closeMenu(): void {\n    if (!this.megaMenu) return;\n    this.megaMenu.style.borderRadius = \"1rem\";\n    gsap.to(this.megaMenu, {\n      duration: 0.4,\n      height: \"0svh\",\n      width: \"100%\",\n      ease: \"power2.in\",\n      onComplete: () => {\n        this.megaMenu!.style.display = \"none\";\n      },\n    });\n\n    // Remove any existing complete listeners first\n    this.lottieAnimation.removeEventListener(\"complete\");\n\n    // Play the close animation\n    this.lottieAnimation.playSegments([70, 140], true);\n\n    // Add the complete listener\n    this.lottieAnimation.addEventListener(\"complete\", () => {\n      this.lottieAnimation.goToAndStop(0, true);\n      // Remove the listener after it executes to prevent memory leaks\n      this.lottieAnimation.removeEventListener(\"complete\");\n    });\n  }\n}\n"],
  "mappings": ";;;AAMO,MAAM,WAAN,MAAe;AAAA,IAAf;AACL,WAAQ,WAA+B;AACvC,WAAQ,aAAiC;AACzC,WAAQ,kBAAuB;AAC/B,WAAQ,SAAkB;AAAA;AAAA,IAEnB,OAAa;AAClB,WAAK,WAAW,SAAS,cAAc,iBAAiB;AACxD,WAAK,aAAa,SAAS,cAAc,iBAAiB;AAE1D,UAAI,CAAC,KAAK,YAAY,CAAC,KAAK,YAAY;AACtC,gBAAQ,MAAM,+BAA+B;AAC7C;AAAA,MACF;AAGA,WAAK,kBAAkB,OAAO,cAAc;AAAA,QAC1C,WAAW,SAAS,cAAc,oBAAoB;AAAA,QACtD,UAAU;AAAA,QACV,MAAM;AAAA,QACN,UAAU;AAAA,QACV,MAAM;AAAA,MACR,CAAC;AAGD,WAAK,WAAW,iBAAiB,SAAS,KAAK,WAAW,KAAK,IAAI,CAAC;AAAA,IACtE;AAAA,IAEQ,aAAmB;AACzB,UAAI,KAAK,QAAQ;AACf,aAAK,UAAU;AAAA,MACjB,OAAO;AACL,aAAK,SAAS;AAAA,MAChB;AACA,WAAK,SAAS,CAAC,KAAK;AAAA,IACtB;AAAA,IAEQ,WAAiB;AACvB,UAAI,CAAC,KAAK;AAAU;AACpB,WAAK,SAAS,MAAM,UAAU;AAC9B,WAAK,GAAG,KAAK,UAAU;AAAA,QACrB,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,MAAM;AAAA,QACN,OAAO;AAAA,QACP,YAAY,MAAM;AAChB,eAAK,SAAU,MAAM,eAAe;AAAA,QACtC;AAAA,MACF,CAAC;AACD,WAAK,gBAAgB,aAAa,CAAC,GAAG,EAAE,GAAG,IAAI;AAAA,IACjD;AAAA,IAEQ,YAAkB;AACxB,UAAI,CAAC,KAAK;AAAU;AACpB,WAAK,SAAS,MAAM,eAAe;AACnC,WAAK,GAAG,KAAK,UAAU;AAAA,QACrB,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,MAAM;AAAA,QACN,YAAY,MAAM;AAChB,eAAK,SAAU,MAAM,UAAU;AAAA,QACjC;AAAA,MACF,CAAC;AAGD,WAAK,gBAAgB,oBAAoB,UAAU;AAGnD,WAAK,gBAAgB,aAAa,CAAC,IAAI,GAAG,GAAG,IAAI;AAGjD,WAAK,gBAAgB,iBAAiB,YAAY,MAAM;AACtD,aAAK,gBAAgB,YAAY,GAAG,IAAI;AAExC,aAAK,gBAAgB,oBAAoB,UAAU;AAAA,MACrD,CAAC;AAAA,IACH;AAAA,EACF;",
  "names": []
}
