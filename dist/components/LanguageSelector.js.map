{
  "version": 3,
  "sources": ["../../src/components/LanguageSelector.ts"],
  "sourcesContent": ["/**\n * LanguageSelector component for handling language selection dropdown.\n */\ndeclare var gsap: any;\n\nexport class LanguageSelector {\n  private languageBtn: HTMLElement | null = null;\n  private languageDropdown: HTMLElement | null = null;\n  private languageIcon: HTMLElement | null = null;\n\n  public init(): void {\n    this.languageBtn = document.querySelector('[class*=\"language--btn-w\"]');\n    this.languageDropdown = document.querySelector(\n      '[class*=\"language--dropdown-w\"]'\n    );\n    this.languageIcon = document.querySelector(\".icon--svg.is--language\");\n\n    // Safety check to ensure required elements exist\n    if (!this.languageBtn || !this.languageDropdown || !this.languageIcon) {\n      console.error(\"Required elements not found!\");\n      return;\n    }\n\n    // Attach event listeners\n    this.languageBtn.addEventListener(\n      \"mouseenter\",\n      this.handleMouseEnter.bind(this)\n    );\n    this.languageBtn.addEventListener(\n      \"mouseleave\",\n      this.handleMouseLeave.bind(this)\n    );\n    this.languageBtn.addEventListener(\"click\", this.handleClick.bind(this));\n\n    // Close dropdown if clicking outside the button or dropdown, or on another dropdown trigger\n    document.addEventListener(\"click\", this.handleDocumentClick.bind(this));\n  }\n\n  private toggleDropdown(isOpen: boolean): void {\n    // Rotate the language icon (0\u00B0 closed, 180\u00B0 open)\n    gsap.to(this.languageIcon, {\n      rotation: isOpen ? 180 : 0,\n      duration: 0.4,\n      ease: \"power2.out\",\n    });\n\n    // Toggle the button's background color based on state\n    gsap.to(this.languageBtn, {\n      backgroundColor: isOpen\n        ? \"var(--secondary--darkest)\"\n        : \"var(--secondary--darker)\",\n      duration: 0.3,\n    });\n\n    if (isOpen) {\n      // First set initial state\n      gsap.set(this.languageDropdown, {\n        visibility: \"visible\",\n        height: 0,\n        opacity: 0,\n      });\n\n      // Animate to final state\n      gsap.to(this.languageDropdown, {\n        opacity: 1,\n        height: \"auto\",\n        duration: 0.5,\n        ease: \"power3.out\",\n      });\n    } else {\n      // Animate back to closed state\n      gsap.to(this.languageDropdown, {\n        opacity: 0,\n        height: 0,\n        duration: 0.5,\n        ease: \"power3.in\",\n        onComplete: () => {\n          gsap.set(this.languageDropdown, { visibility: \"hidden\" });\n        },\n      });\n    }\n  }\n\n  private handleMouseEnter(): void {\n    if (!this.languageBtn!.classList.contains(\"clicked\")) {\n      gsap.to(this.languageBtn, {\n        width: \"4.75rem\",\n        backgroundColor: \"var(--secondary--darker)\",\n        duration: 0.3,\n        ease: \"power2.out\",\n      });\n    }\n  }\n\n  private handleMouseLeave(): void {\n    if (!this.languageBtn!.classList.contains(\"clicked\")) {\n      gsap.to(this.languageBtn, {\n        width: \"2rem\",\n        backgroundColor: \"var(--secondary--darker)\",\n        duration: 0.3,\n        ease: \"power2.in\",\n      });\n    }\n  }\n\n  private handleClick(): void {\n    const isClicked = this.languageBtn!.classList.toggle(\"clicked\");\n    this.toggleDropdown(isClicked);\n  }\n\n  private handleDocumentClick(event: MouseEvent): void {\n    const target = event.target as Node | null;\n    if (!target) return;\n\n    const isInside =\n      this.languageBtn!.contains(target) ||\n      this.languageDropdown!.contains(target);\n    const isDropdownTrigger = (target as HTMLElement).closest(\n      \".btn--nav-dropdown\"\n    );\n\n    if (\n      (!isInside && this.languageBtn!.classList.contains(\"clicked\")) ||\n      (isDropdownTrigger && !this.languageDropdown!.contains(isDropdownTrigger))\n    ) {\n      this.languageBtn!.classList.remove(\"clicked\");\n      this.toggleDropdown(false);\n\n      // Reset the button width\n      gsap.to(this.languageBtn, {\n        width: \"2rem\",\n        backgroundColor: \"var(--secondary--darker)\",\n        duration: 0.3,\n        ease: \"power2.in\",\n      });\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
