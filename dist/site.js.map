{
  "version": 3,
  "sources": ["../node_modules/@sygnal/sse/src/script.ts", "../node_modules/@sygnal/sse/src/page.ts", "../node_modules/js-cookie/dist/js.cookie.mjs", "../src/components/Navigation.ts", "../src/site.ts"],
  "sourcesContent": ["\r\ninterface ScriptConfig {\r\n\r\n    /** The type of the script, e.g., \"text/javascript\". */\r\n    type?: string;\r\n\r\n    /** The id of the script. */\r\n    id?: string;\r\n\r\n    /** Whether the script should be loaded asynchronously. */\r\n    async?: boolean;\r\n\r\n    /** Whether the script should be deferred. */\r\n    defer?: boolean;\r\n\r\n    /** Custom attributes to add to the script element. */\r\n    customAttributes?: { [key: string]: string };\r\n    \r\n  }\r\n  \r\n  class ScriptElement extends HTMLScriptElement {\r\n    constructor(src: string, config?: ScriptConfig) {\r\n      super();\r\n      this.src = src;\r\n  \r\n      if (config) {\r\n        if (config.type) {\r\n          this.type = config.type;\r\n        }\r\n        if (config.id) {\r\n          this.id = config.id;\r\n        }\r\n        if (config.async !== undefined) {\r\n          this.async = config.async;\r\n        }\r\n        if (config.defer !== undefined) {\r\n          this.defer = config.defer;\r\n        }\r\n        if (config.customAttributes) {\r\n          for (const [key, value] of Object.entries(config.customAttributes)) {\r\n            this.setAttribute(key, value);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n    // Method to append the script to the document\r\n    appendTo(\r\n        target: 'head' | 'body' = 'body'\r\n    ): void {\r\n        const parent = target === 'head' ? document.head : document.body;\r\n        parent.appendChild(this);\r\n    }\r\n\r\n    prependTo(\r\n        target: 'head' | 'body' = 'body'\r\n    ): void {\r\n        const parent = target === 'head' ? document.head : document.body;\r\n        parent.prepend(this);\r\n    }\r\n\r\n  }\r\n  \r\n  // Define the custom element if necessary\r\n  customElements.define('custom-script', ScriptElement, { extends: 'script' });\r\n  \r\n  export { ScriptElement, ScriptConfig };\r\n  ", "\r\n\r\n// Determine Webflow breakpoint?\r\n\r\nimport { ScriptConfig, ScriptElement } from \"./script\";\r\n\r\nexport class Page {\r\n\r\n    static Head = class {\r\n\r\n\r\n        /**\r\n         * Appends the specified script to the page &lt;head&gt;.\r\n         * @param src The src url of the script to load.\r\n         * @param config Configuration options for the script element.\r\n         */\r\n        static loadScript(src: string, config?: ScriptConfig): void {\r\n\r\n            const script: ScriptElement = new ScriptElement(src, config);\r\n            script.appendTo('head');\r\n\r\n            // const script = document.createElement('script');\r\n            // script.src = src;\r\n            // document.body.appendChild(script);\r\n        }\r\n\r\n    };\r\n\r\n    static Body = class {\r\n\r\n        /**\r\n         * Appends the specified script to the page &lt;body&gt;.\r\n         * @param src The src url of the script to load.\r\n         * @param config Configuration options for the script element.\r\n         */\r\n        static loadScript(src: string, config?: ScriptConfig): void {\r\n\r\n            const script: ScriptElement = new ScriptElement(src, config);\r\n            script.appendTo('body');\r\n\r\n            // const script = document.createElement('script');\r\n            // script.src = src;\r\n            // document.body.appendChild(script);\r\n        }\r\n\r\n    };\r\n\r\n\r\n    \r\n    \r\n        // // Add a new async script to the page\r\n        // // at the end of the body\r\n        // static loadScript(url: string): void {\r\n        //     const script = document.createElement('script');\r\n        //     script.src = url;\r\n        // //    script.async = true;\r\n        //     document.body.appendChild(script);\r\n        // }\r\n    \r\n        // Add a new CSS file to the page\r\n        static loadCSS(url: string): void {\r\n            const link = document.createElement('link');\r\n            link.rel = 'stylesheet';\r\n            link.href = url;\r\n            document.head.appendChild(link);\r\n        }\r\n    \r\n        // Add a new Engine CSS file to the page\r\n        // Expected to be in the /dist/css/ dir \r\n        static loadEngineCSS(cssFileName: string): void {\r\n            // Get the URL of the currently executing script\r\n            let libPath = window.SSE.baseUrl;\r\n\r\n            // const currentScript = document.currentScript as HTMLScriptElement;\r\n            // if (currentScript) {\r\n                // const scriptURL = new URL(currentScript.src);\r\n                // const origin = scriptURL.origin;\r\n                // const path = scriptURL.pathname.substring(0, scriptURL.pathname.lastIndexOf('/'));\r\n    \r\n                const cssURL = `${libPath}/css/${cssFileName}`;\r\n                this.loadCSS(cssURL);\r\n            // } else {\r\n            //     console.error('Unable to determine the currently executing script.');\r\n            // }\r\n        }\r\n    \r\n        // Add a new Style element to the page\r\n        static loadStyle(css: string): void {\r\n            const style = document.createElement('style');\r\n        //    link.rel = 'stylesheet';\r\n        //    link.href = url;\r\n            style.innerText = css;\r\n            document.head.appendChild(style);\r\n        }\r\n    \r\n        // Replace an existing script source\r\n        static replaceScriptSource(element: HTMLScriptElement, newSrc: string): void {\r\n            element.src = newSrc;\r\n        }\r\n    \r\n        // Replace an existing CSS source\r\n        static replaceCSSLink(element: HTMLLinkElement, newHref: string): void {\r\n            element.href = newHref;\r\n        }\r\n    \r\n        // Function to prepend text to the document title in development mode\r\n        static prependToTitle(text: string): void {\r\n            document.title = `${text}${document.title}`;\r\n        }\r\n    \r\n        // Function to get the current script URL\r\n        static getCurrentScriptUrl(): string | null {\r\n            // Check if document.currentScript is supported\r\n            if (document.currentScript) {\r\n                // Cast to HTMLScriptElement and get the src attribute\r\n                const currentScript = document.currentScript as HTMLScriptElement;\r\n                return currentScript.src;\r\n            }\r\n            // For browsers that do not support document.currentScript\r\n            console.error(\"document.currentScript is not supported in this browser.\");\r\n            return null;\r\n        }\r\n    \r\n        static getCurrentScriptBaseUrl(): string | undefined {\r\n            // Get the URL of the currently executing script\r\n            const currentScript = document.currentScript as HTMLScriptElement;\r\n            if (currentScript) {\r\n                const scriptURL = new URL(currentScript.src);\r\n                const origin = scriptURL.origin;\r\n                const path = scriptURL.pathname.substring(0, scriptURL.pathname.lastIndexOf('/'));\r\n    \r\n                const baseURL = `${origin}${path}`;\r\n                return baseURL; \r\n            } else {\r\n                console.error('Unable to determine the currently executing script.');\r\n            }\r\n\r\n            return undefined; \r\n        }\r\n\r\n    \r\n        static findAncestorWithAttribute(element: HTMLElement, attributeName: string): HTMLElement | null {\r\n            let currentElement: HTMLElement | null = element;\r\n    \r\n            while (currentElement) {\r\n                if (currentElement.hasAttribute(attributeName)) {\r\n                    return currentElement;\r\n                }\r\n                currentElement = currentElement.parentElement;\r\n            }\r\n    \r\n            return null;\r\n        }\r\n    \r\n        static getAncestorAttributeValue(element: HTMLElement, attributeName: string): string | null {\r\n            let currentElement: HTMLElement | null = element;\r\n    \r\n            while (currentElement) {\r\n                if (currentElement.hasAttribute(attributeName)) {\r\n                    return currentElement.getAttribute(attributeName);\r\n                }\r\n                currentElement = currentElement.parentElement;\r\n            }\r\n    \r\n            return null;\r\n        }\r\n    \r\n        static hasAncestorWithAttribute(element: HTMLElement, attributeName: string): boolean {\r\n            return this.findAncestorWithAttribute(element, attributeName) !== null;\r\n        }\r\n    \r\n        static convertToPixels(value: string, contextElement: HTMLElement = document.documentElement): number {\r\n            // Parse the numeric value and unit, including negative values\r\n            const match = value.match(/^(-?\\d+\\.?\\d*)(rem|em|px|vh|vw|%)$/);\r\n            if (!match) throw new Error('Invalid value format');\r\n    \r\n            const [, amountStr, unit] = match;\r\n            const amount = parseFloat(amountStr);\r\n    \r\n            // Convert based on the unit\r\n            switch (unit) {\r\n                case 'px':\r\n                    return amount;\r\n                case 'rem':\r\n                    return amount * parseFloat(getComputedStyle(document.documentElement).fontSize);\r\n                case 'em':\r\n                    // For 'em', it's relative to the font-size of the context element.\r\n                    return amount * parseFloat(getComputedStyle(contextElement).fontSize);\r\n                case 'vh':\r\n                    return amount * window.innerHeight / 100;\r\n                case 'vw':\r\n                    return amount * window.innerWidth / 100;\r\n                case '%':\r\n                    // For %, it's relative to the parent element's size. This can be tricky as it depends on the property (width, height, font-size, etc.).\r\n                    // In this example, we'll use it relative to the width of the context element, but you might need to adjust based on your specific use case.\r\n                    return amount * contextElement.clientWidth / 100;\r\n                default:\r\n                    throw new Error('Unsupported unit');\r\n            }\r\n        }\r\n    \r\n        /*\r\n        // Example usage:\r\n        const pixelValue = convertToPixels(\"10vh\");\r\n        console.log(pixelValue);\r\n        */\r\n    \r\n        static async getResponseHeader(headerName: string, url: string | undefined = undefined): Promise<string | undefined> {\r\n    \r\n            const headers: Headers | undefined = await this.getResponseHeaders(url);\r\n    \r\n            if(!headers)\r\n                return undefined;\r\n    \r\n            if(!headers.has(headerName)) \r\n                return undefined;\r\n    \r\n            return headers.get(headerName) || undefined;\r\n    \r\n        }\r\n    \r\n        // Function to check if the reverse proxy header is present\r\n        static async getResponseHeaders(url: string | undefined = undefined): Promise<Headers | undefined> {\r\n            try {\r\n    \r\n                if(!url) {\r\n                    url = window.location.href\r\n                }\r\n    \r\n                const response = await fetch(url, {\r\n                    method: 'HEAD', // Only fetch headers\r\n                });\r\n    \r\n                return response.headers;\r\n    \r\n            } catch (error) {\r\n                console.error('Error checking reverse proxy header:', error);\r\n            }\r\n    \r\n            return undefined;\r\n        }\r\n    \r\n    }\r\n    \r\n    \r\n    ", "/*! js-cookie v3.0.5 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (name, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    name = encodeURIComponent(name)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      name + '=' + converter.write(value, name) + stringifiedAttributes)\n  }\n\n  function get (name) {\n    if (typeof document === 'undefined' || (arguments.length && !name)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var found = decodeURIComponent(parts[0]);\n        jar[found] = converter.read(value, found);\n\n        if (name === found) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return name ? jar[name] : jar\n  }\n\n  return Object.create(\n    {\n      set,\n      get,\n      remove: function (name, attributes) {\n        set(\n          name,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport { api as default };\n", "/**\n * Combined navigation scripts in TypeScript for use with Sygnal Framework & Webflow.\n * Original inline comments and functionality have been preserved.\n */\n\n// Declare externally loaded libraries from Webflow\ndeclare var gsap: any;\ndeclare var lottie: any;\n\n/**\n * Navigation component for Sygnal Framework & Webflow integration\n */\nexport class Navigation {\n  // Declare class properties\n  private lastScrollTop: number = 0;\n  private navbar: HTMLElement | null = null;\n  private readonly scrollThreshold: number = 50;\n  private readonly mobileBreakpoint: number = 768;\n\n  /**\n   * Initialize the component\n   */\n  public init(): void {\n    // Initialize elements once DOM is ready\n    this.navbar = document.querySelector(\".nav--bar\");\n\n    // Initialize all navigation features\n    this.initScrollBehavior();\n    this.initMegaMenu();\n    this.initDropdowns();\n    this.initLanguageSelector();\n  }\n\n  private initScrollBehavior(): void {\n    // Add smooth transition to the navbar\n    if (this.navbar) {\n      this.navbar.style.transition = \"transform 0.3s ease-in-out\";\n    }\n\n    // Add scroll event listener\n    window.addEventListener(\"scroll\", this.handleScroll.bind(this), {\n      passive: true,\n    });\n  }\n\n  private initMegaMenu(): void {\n    // Select all elements\n    const megaMenu = document.querySelector(\".nav--mega-menu\");\n    const menuButton = document.querySelector(\".btn--hamburger\");\n\n    // Load Lottie animation\n    const lottieAnimation = lottie.loadAnimation({\n      container: document.querySelector(\".lottie--hamburger\"), // the dom element\n      renderer: \"svg\",\n      loop: false,\n      autoplay: false,\n      path: \"https://cdn.prod.website-files.com/6723d26a4aa4a278cad8f59c/6777ecd6636dc4314d954783_Icon%20-%20Hamburger%20Menu.json\",\n    });\n\n    // Function to open the menu\n    function openMenu() {\n      if (!megaMenu) return;\n      megaMenu.style.display = \"flex\"; // Set display to flex before animation\n      gsap.to(megaMenu, {\n        duration: 0.8,\n        height: \"100svh\",\n        width: \"100%\",\n        ease: \"power2.out\",\n        delay: 0.2,\n        onComplete: () => {\n          megaMenu.style.borderRadius = \"0rem\";\n        },\n      });\n      lottieAnimation.playSegments([0, 70], true);\n    }\n\n    // Function to close the menu\n    function closeMenu() {\n      if (!megaMenu) return;\n      megaMenu.style.borderRadius = \"1rem\";\n      gsap.to(megaMenu, {\n        duration: 0.4,\n        height: \"0svh\",\n        width: \"100%\",\n        ease: \"power2.in\",\n        onComplete: () => {\n          megaMenu.style.display = \"none\";\n        },\n      });\n\n      // Remove any existing complete listeners first\n      lottieAnimation.removeEventListener(\"complete\");\n\n      // Play the close animation\n      lottieAnimation.playSegments([70, 140], true);\n\n      // Add the complete listener\n      lottieAnimation.addEventListener(\"complete\", () => {\n        lottieAnimation.goToAndStop(0, true);\n        // Remove the listener after it executes to prevent memory leaks\n        lottieAnimation.removeEventListener(\"complete\");\n      });\n    }\n\n    // Toggle menu on button click\n    let isOpen = false;\n    if (menuButton) {\n      menuButton.addEventListener(\"click\", () => {\n        if (!isOpen) {\n          openMenu();\n        } else {\n          closeMenu();\n        }\n        isOpen = !isOpen;\n      });\n    }\n  }\n\n  private initDropdowns(): void {\n    // Select all dropdown containers\n    const dropdowns = Array.from(document.querySelectorAll(\".nav--dropdown\"));\n\n    if (!dropdowns.length) {\n      console.error(\"No dropdown elements found in the DOM!\");\n    } else {\n      // Select the main navigation container once\n      const navigation = document.querySelector(\".nav--bar\");\n\n      if (!navigation) {\n        console.error(\"Navigation container (.navigation) not found!\");\n      } else {\n        // Initialize dropdown data\n        const dropdownData = dropdowns\n          .map((dropdown) => {\n            const dropdownToggle = dropdown.querySelector(\".btn--nav-dropdown\");\n            const dropdownMenu = dropdown.querySelector(\".nav--dropdown-menu\");\n            const dropdownIcon = dropdown.querySelector(\".icon--svg.is--nav\");\n\n            if (!dropdownToggle || !dropdownMenu || !dropdownIcon) {\n              console.warn(\n                \"Some required elements (dropdownToggle, dropdownMenu, dropdownIcon) are missing in a .nav--dropdown!\"\n              );\n              return null;\n            }\n\n            return {\n              dropdown,\n              toggle: dropdownToggle, // Button that triggers dropdown\n              dropdownMenu: dropdownMenu, // (Renamed from \"menu\" to \"dropdownMenu\")\n              icon: dropdownIcon, // Rotation indicator for dropdown state\n              isOpen: false, // Tracks if menu is visible\n              animating: false, // Prevents interaction during animations\n            };\n          })\n          .filter((d) => d !== null);\n\n        /**\n         * Utility function to create a GSAP timeline for opening a dropdown\n         */\n        const createOpenTimeline = (d: {\n          dropdownMenu: HTMLElement;\n          icon: HTMLElement;\n          toggle: HTMLElement;\n          animating: boolean;\n        }) => {\n          const tl = gsap.timeline({\n            onStart: () => {\n              d.animating = true;\n            },\n            onComplete: () => {\n              d.animating = false;\n            },\n          });\n\n          // Check if we're on desktop (window width > 768px)\n          const isDesktop = window.matchMedia(\"(min-width: 768px)\").matches;\n\n          tl.fromTo(\n            d.dropdownMenu,\n            { opacity: 0, height: 0 },\n            { opacity: 1, height: \"auto\", duration: 0.3, ease: \"power2.out\" }\n          )\n            .to(\n              d.icon,\n              { rotation: 180, duration: 0.3, ease: \"power2.out\" },\n              \"<\"\n            )\n            .to(\n              d.toggle,\n              { backgroundColor: \"var(--secondary--darkest)\", duration: 0.3 },\n              \"<\"\n            );\n\n          // Only add border radius animation on desktop\n          if (isDesktop) {\n            tl.to(\n              navigation,\n              {\n                borderBottomLeftRadius: \"0\",\n                borderBottomRightRadius: \"0\",\n                duration: 0.3,\n                ease: \"power2.out\",\n              },\n              \"<\"\n            );\n          }\n\n          return tl;\n        };\n\n        /**\n         * Utility function to create a GSAP timeline for closing a dropdown\n         */\n        const createCloseTimeline = (d: {\n          dropdownMenu: HTMLElement;\n          icon: HTMLElement;\n          toggle: HTMLElement;\n          animating: boolean;\n        }) => {\n          const tl = gsap.timeline({\n            onStart: () => {\n              d.animating = true;\n            },\n            onComplete: () => {\n              d.animating = false;\n            },\n          });\n\n          // Check if we're on desktop (window width > 768px)\n          const isDesktop = window.matchMedia(\"(min-width: 768px)\").matches;\n\n          tl.fromTo(\n            d.dropdownMenu,\n            { opacity: 1, height: d.dropdownMenu.scrollHeight },\n            { opacity: 0, height: 0, duration: 0.3, ease: \"power2.in\" }\n          )\n            .to(d.icon, { rotation: 0, duration: 0.3, ease: \"power2.in\" }, \"<\")\n            .to(d.toggle, { backgroundColor: \"\", duration: 0.3 }, \"<\");\n\n          // Only add border radius animation on desktop\n          if (isDesktop) {\n            tl.to(\n              navigation,\n              {\n                borderBottomLeftRadius: \"1rem\",\n                borderBottomRightRadius: \"1rem\",\n                duration: 0.3,\n                ease: \"power2.in\",\n              },\n              \"<\"\n            );\n          }\n\n          return tl;\n        };\n\n        /**\n         * Closes all open dropdowns except the specified one\n         */\n        const closeAllDropdowns = (except: any = null) => {\n          dropdownData.forEach((d: any) => {\n            if (d !== except && d.isOpen && !d.animating) {\n              closeDropdown(d);\n            }\n          });\n        };\n\n        /**\n         * Opens a specific dropdown\n         */\n        const openDropdown = (d: any) => {\n          createOpenTimeline(d).play();\n          d.isOpen = true;\n        };\n\n        /**\n         * Closes a specific dropdown\n         */\n        const closeDropdown = (d: any) => {\n          createCloseTimeline(d).play();\n          d.isOpen = false;\n        };\n\n        // Attach event listeners to each dropdown toggle\n        dropdownData.forEach((d: any) => {\n          if (!d) return;\n          d.toggle.addEventListener(\"click\", () => {\n            if (d.animating) return; // Prevent action if animating\n\n            // Toggle the dropdown\n            if (d.isOpen) {\n              closeDropdown(d);\n            } else {\n              closeAllDropdowns(d); // Close others before opening\n              openDropdown(d);\n            }\n          });\n        });\n\n        // Event listener to close dropdowns when clicking outside\n        document.addEventListener(\"click\", (e) => {\n          dropdownData.forEach((d: any) => {\n            if (d.isOpen && !d.animating) {\n              const clickedInside =\n                d.dropdown.contains(e.target) || d.toggle.contains(e.target);\n              if (!clickedInside) {\n                closeDropdown(d);\n              }\n            }\n          });\n        });\n\n        // Close dropdowns when pressing the Escape key\n        document.addEventListener(\"keydown\", (e) => {\n          if (e.key === \"Escape\") {\n            closeAllDropdowns();\n          }\n        });\n      }\n    }\n  }\n\n  private initLanguageSelector(): void {\n    // Selectors for the language button, dropdown, and rotating icon\n    const languageBtn = document.querySelector('[class*=\"language--btn-w\"]');\n    const languageDropdown = document.querySelector(\n      '[class*=\"language--dropdown-w\"]'\n    );\n    const languageIcon = document.querySelector(\".icon--svg.is--language\");\n\n    // Safety check to ensure required elements exist\n    if (!languageBtn || !languageDropdown || !languageIcon) {\n      console.error(\"Required elements not found!\");\n    } else {\n      // Function to open or close the dropdown\n      const toggleDropdown = (isOpen: boolean) => {\n        // Rotate the language icon (0\u00B0 closed, 180\u00B0 open)\n        gsap.to(languageIcon, {\n          rotation: isOpen ? 180 : 0,\n          duration: 0.4,\n          ease: \"power2.out\",\n        });\n\n        // Toggle the button's background color based on state\n        gsap.to(languageBtn, {\n          backgroundColor: isOpen\n            ? \"var(--secondary--darkest)\"\n            : \"var(--secondary--darker)\",\n          duration: 0.3,\n        });\n\n        if (isOpen) {\n          // First set initial state\n          gsap.set(languageDropdown, {\n            visibility: \"visible\",\n            height: 0,\n            opacity: 0,\n          });\n\n          // Animate to final state\n          gsap.to(languageDropdown, {\n            opacity: 1,\n            height: \"auto\",\n            duration: 0.5,\n            ease: \"power3.out\",\n          });\n        } else {\n          // Animate back to closed state\n          gsap.to(languageDropdown, {\n            opacity: 0,\n            height: 0,\n            duration: 0.5,\n            ease: \"power3.in\",\n            onComplete: () => {\n              gsap.set(languageDropdown, { visibility: \"hidden\" });\n            },\n          });\n        }\n      };\n\n      // Hover effect: expand button width on hover in\n      languageBtn.addEventListener(\"mouseenter\", () => {\n        if (!languageBtn.classList.contains(\"clicked\")) {\n          gsap.to(languageBtn, {\n            width: \"4.75rem\",\n            backgroundColor: \"var(--secondary--darker)\",\n            duration: 0.3,\n            ease: \"power2.out\",\n          });\n        }\n      });\n\n      // Hover effect: collapse button width on hover out\n      languageBtn.addEventListener(\"mouseleave\", () => {\n        if (!languageBtn.classList.contains(\"clicked\")) {\n          gsap.to(languageBtn, {\n            width: \"2rem\",\n            backgroundColor: \"var(--secondary--darker)\",\n            duration: 0.3,\n            ease: \"power2.in\",\n          });\n        }\n      });\n\n      // Click event: toggle dropdown open/close\n      languageBtn.addEventListener(\"click\", () => {\n        const isClicked = languageBtn.classList.toggle(\"clicked\");\n        toggleDropdown(isClicked);\n      });\n\n      // Close dropdown if clicking outside the button or dropdown, or on another dropdown trigger\n      document.addEventListener(\"click\", (event) => {\n        const target = event.target as Node | null;\n        if (!target) return;\n\n        const isInside =\n          languageBtn.contains(target) || languageDropdown.contains(target);\n        const isDropdownTrigger = (target as HTMLElement).closest(\n          \".btn--nav-dropdown\"\n        );\n\n        if (\n          (!isInside && languageBtn.classList.contains(\"clicked\")) ||\n          (isDropdownTrigger && !languageDropdown.contains(isDropdownTrigger))\n        ) {\n          languageBtn.classList.remove(\"clicked\");\n          toggleDropdown(false);\n\n          // Perform the hover-out action to reset the button width\n          gsap.to(languageBtn, {\n            width: \"2rem\",\n            backgroundColor: \"var(--secondary--darker)\",\n            duration: 0.3,\n            ease: \"power2.in\",\n          });\n        }\n      });\n    }\n  }\n\n  private handleScroll(): void {\n    // Only run on desktop\n    if (window.innerWidth <= this.mobileBreakpoint) return;\n\n    const currentScroll =\n      window.pageYOffset || document.documentElement.scrollTop;\n\n    // Check if user has scrolled more than threshold\n    if (Math.abs(this.lastScrollTop - currentScroll) <= this.scrollThreshold)\n      return;\n\n    // Scrolling down & not at the top\n    if (currentScroll > this.lastScrollTop && currentScroll > 50) {\n      if (this.navbar) {\n        this.navbar.style.transform = \"translateY(-200%)\";\n      }\n    }\n    // Scrolling up\n    else {\n      if (this.navbar) {\n        this.navbar.style.transform = \"translateY(0)\";\n      }\n    }\n\n    this.lastScrollTop = currentScroll;\n  }\n}\n", "/*\n * Site\n */\n\nimport { IModule, Page } from \"@sygnal/sse\";\nimport { Navigation } from \"./components/Navigation\";\n\n// import gsap from 'gsap';\n\nexport class Site implements IModule {\n  private navigation: Navigation;\n\n  constructor() {}\n\n  /**\n   * Setup code runs synchronously, inline, at the end of the </head>.\n   * It's used for special init tasks that must be performed early, and which do not require\n   * the DOM to be loaded.\n   */\n  setup() {\n    Page.loadEngineCSS(\"site.css\");\n  }\n\n  /**\n   * Exec code runs after the DOM has processed.\n   */\n  exec() {\n    // Initialize navigation when DOM is ready\n    this.navigation = new Navigation();\n    this.navigation.init();\n  }\n}\n"],
  "mappings": "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",
  "names": ["converter"]
}
